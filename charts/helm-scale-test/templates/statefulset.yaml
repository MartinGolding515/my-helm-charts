{{- if eq .Values.sts.enable true }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "helm-scale-test.fullname" . }}
  labels:
    {{- include "helm-scale-test.labels" . | nindent 4 }}
    app.mylabel: {{ printf "\"%d\"" (add (.Values.testnum|int) (.Values.replicaCount|int)) }}
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: /metrics/prometheus
spec:
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: Parallel #only for scaling, doesnt affect updates
  serviceName: {{ include "helm-scale-test.fullname" . }}
  updateStrategy:
{{/*    type: OnDelete*/}}
    type: RollingUpdate
    rollingUpdate:
      partition: {{ .Values.sts.partition }} # pods with ordinal above this will be updated
{{/*  ... have to change this value to update lower ordinals (i.e. 2+ step update) - canary */}}
  selector:
    matchLabels:
      {{- include "helm-scale-test.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "helm-scale-test.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 15
      volumes:
        - name: test-data
          configMap:
            name: {{ printf "%s-data-cm" .Chart.Name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['/bin/sh']
          env:
            - name: WAIT_SECONDS
              value: "5"
          args:
            - -c
            - |
              echo sleep for ${WAIT_SECONDS};
              sleep ${WAIT_SECONDS};
              echo done
      containers:
        - name: {{ .Chart.Name }}
          volumeMounts:
            - mountPath: /var/sis/
              name: test-data
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ['/bin/sh']
          args:
            - -c
            - |
              apt update > /dev/null;
              apt install -y stress htop > /dev/null;
              while :
              do
                echo $(cat /var/sis/data.txt);
                #stress -c ${CPU} -t ${TIME};
                sleep ${SLEEP} & wait $!;
              done;
          env:
            {{- range $k, $v:= $.Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
              {{- end}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- end }}